:properties:
:CFEngine_Example_Index: [[id:38277465-771a-4db4-983a-8dfd434b1aff][CFEngine_examples]]
:CFEngine_Functions: [[id:02e9257f-46c0-4cac-a304-08b54b3f24d2][Function: returnszero()]]
:CFEngine_PromiseTypes: [[id:b31e06a4-d3b1-44f2-9292-cd20ca17cb66][Promise type: vars]] [[id:23504787-b597-41ff-819d-b9625f773210][Promise type: files]] [[id:5ba052b7-941d-4257-bb73-5dafd8b74ce3][Promise type: services]] [[id:431e6692-7600-4467-a0c0-609ea7c09a17][Promise type: classes]]
:ID:       58a3d05d-c93b-4a39-9f29-a84994493034
:CREATED:  [2022-11-16 Wed 14:48]
:end:
#+title: Generic example illustrating modifying a service config and restarting the service

#+begin_src cfengine3 :include-stdlib t :log-level info :exports both
  bundle agent __main__
  {

    vars:
        "config_file" string => "/tmp/config.txt";


    files:
        "$(config_file)"
          content => "my_service_config",
          classes => results( "bundle", "my_service_config" );

    services:
        "my_service"
          service_policy => "start";

      my_service_config_reapaired::
        "my_service"
          service_policy => "restart";
  }
#+end_src

* With service config validation

Not every service provides the ability to validate a configuration file, but for those that do (like ~apache configcheck~, ~visudo -c~, ~sshd -t~) this is a nice option.

#+begin_src cfengine3 :include-stdlib t :log-level info :exports both
  bundle agent __main__
  {

    vars:
        "config_file" string => "/tmp/config.txt";

    classes:
      my_service_staged_config_repaired::
        "my_service_staged_config_validated"
          expression => returnszero( "/bin/validation/cmd", noshell );

    files:
        "$(config_file).staged"
          copy_from => local_dcp( "$(config_file)" );

        "$(config_file).staged"
          content => "My config values",
          classes => results( "bundle", "my_service_staged_config" );

      my_service_staged_config_repaired.my_service_staged_config_validated::
         "$(config_file)"
          copy_from => local_dcp( "$(config_file).staged" );
          classes => results( "bundle", "my_service_config" );

    services:
        "my_service"
          service_policy => "start";

      my_service_config_reapaired::
        "my_service"
          service_policy => "restart",
          classes => results( "bundle", "my_service_restart" );
  }
#+end_src
