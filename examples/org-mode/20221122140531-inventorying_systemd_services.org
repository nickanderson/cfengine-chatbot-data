:properties:
:CFEngine_Example_Index: [[id:38277465-771a-4db4-983a-8dfd434b1aff][CFEngine_examples]]
:CFEngine_Functions: [[id:87c6bed4-cb2f-4a95-87c0-e53650e91909][Function: readstringlist()]] [[id:79fc02c5-2664-48bc-bcd1-6a4aeb5821f0][Function: fileexists()]] [[id:912207eb-c307-4a33-bda5-18bf8a6410fc][Function: nth()]] [[id:61ecf84b-2333-4b5b-87dc-385f16bffd4b][Function: string_split()]]
:CFEngine_PromiseTypes: [[id:afe3a708-4fc0-482a-bddf-5c97a0a557e4][Promise type: meta]]  [[id:b31e06a4-d3b1-44f2-9292-cd20ca17cb66][Promise type: vars]] [[id:67e86f42-3fab-4723-b0b7-4d6cdb87b26d][Promise type: commands]]
:ID:       8f3ff42d-6c49-4166-a0cc-816290d15478
:CREATED:  [2022-11-22 Tue 14:07]
:end:
#+title: Example illustrating inventorying systemd services

#+begin_src cfengine3 :tangle inventorying_systemd_services.cf
  bundle agent inventory_systemd_services
  {
    meta:
      systemd::
        "tags" slist => { "autorun" };

    vars:

        "cache" string => "$(sys.statedir)/systemd-units-running.dat";

        "s"
          slist => readstringlist( $(cache), "", $(const.n), inf, inf),
          if => fileexists( $(cache) );

  @if minimum_version(3.12)
        "i[$(s)]"
          string => "$(with)",
          with => nth( string_split( $(s), "\.service", inf ), 0 ),
          meta => { "inventory", "attribute_name=Systemd services running"};
  @endif

    commands:

        "$(paths.systemctl) list-units --type=service --state=running | awk '/^UNIT .*/{flag=1;next}/^$/{flag=0}flag{print $1}' > $(cache)"
          contain => in_shell;

  }
  bundle agent __main__
  {
        methods: "inventory_systemd_services";
  }
#+end_src
