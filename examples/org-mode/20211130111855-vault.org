:PROPERTIES:
:ID:       c8c6ea49-865b-4ece-878c-8bc9647a1172
:CREATED:  [2021-11-30 Tue 13:09]
:END:
#+title: Example illustrating Vault

I quickly spun up a ~vault~ dev instance.

#+caption: Example Policy
#+begin_src cfengine3 :include-stdlib t :log-level info :exports both :extra-opts --show-evaluated-vars=default:main\\.
  bundle agent __main__
  {
    vars:
        "_status" data => mergedata( execresult( "VAULT_ADDR='http://127.0.0.1:8200' VAULT_TOKEN='s.bzDmuSuSYHPpJd75QTiVWBfD' vault status --format json", useshell ));
        
    reports:
        "Vault Storage Type: '$(_status[storage_type])'";
  }
#+end_src

#+RESULTS:
: R: Vault Storage Type: 'inmem'
: Variable name                            Variable value                                               Meta tags                                Comment                                 
: default:main._status                     {"active_time":"0001-01-01T00:00:00Z","cluster_id":"3a0dc6ae-0d71-daea-d2d9-8dec8da0aff2","cluster_name":"vault-cluster-20f5fd72","ha_enabled":false,"initialized":true,"migration":false,"n":1,"nonce":"","progress":0,"recovery_seal":false,"sealed":false,"storage_type":"inmem","t":1,"type":"shamir","version":"1.9.0"} source=promise                                                                   

Note: It's insecure to put the =VAULT_TOKEN=  directly into the policy as I have done above.

Get it into the executing users shell env, e.g. ~export VAULT_TOKEN='s.bzDmuSuSYHPpJd75QTiVWBfD'~ in =.profile=:

#+begin_src cfengine3 :include-stdlib t :log-level info :exports both :extra-opts --show-evaluated-vars=default:main\\.
  bundle agent __main__
  {
    vars:
        "_status" data => mergedata( execresult( "VAULT_ADDR='http://127.0.0.1:8200' vault status --format json", useshell ));
  
    reports:
        "Vault Storage Type: '$(_status[storage_type])'";
        "Tail -n 1 ~/.profile"
           printfile => tail_n( "$(with)/.profile", 2 ),
           with => getenv( "HOME", inf ); 
  }
#+end_src

#+RESULTS:
: R: Vault Storage Type: 'inmem'
: R: Tail -n 1 ~/.profile
: R: export EDITOR=vim
: R: export VAULT_TOKEN='s.bzDmuSuSYHPpJd75QTiVWBfD'
: Variable name                            Variable value                                               Meta tags                                Comment                                 
: default:main._status                     {"active_time":"0001-01-01T00:00:00Z","cluster_id":"3a0dc6ae-0d71-daea-d2d9-8dec8da0aff2","cluster_name":"vault-cluster-20f5fd72","ha_enabled":false,"initialized":true,"migration":false,"n":1,"nonce":"","progress":0,"recovery_seal":false,"sealed":false,"storage_type":"inmem","t":1,"type":"shamir","version":"1.9.0"} source=promise                                                                   

Or perhaps store it in a cf-secret encrypted file  ~export VAULT_TOKEN='s.bzDmuSuSYHPpJd75QTiVWBfD'~ and load it when needed:

#+begin_example
  ❯ echo s.bzDmuSuSYHPpJd75QTiVWBfD > /tmp/vault.token
  ❯ cf-secret encrypt --key ~/.cfagent/ppkeys/localhost.pub --output /tmp/vault.token.cfsecret /tmp/vault.token
  ❯ cf-secret decrypt --key ~/.cfagent/ppkeys/localhost.priv --output - /tmp/vault.token.cfsecret
  s.bzDmuSuSYHPpJd75QTiVWBfD
#+end_example

#+begin_src cfengine3 :include-stdlib t :log-level info :exports both :extra-opts --show-evaluated-vars=default:main\\.
  bundle agent __main__
  {
    vars:
        "_status" data => mergedata( execresult( "VAULT_ADDR='http://127.0.0.1:8200' VAULT_TOKEN='$(with)' vault status --format json", useshell )),
          with => execresult( "cf-secret decrypt --key $HOME/.cfagent/ppkeys/localhost.priv --output - /tmp/vault.token.cfsecret", useshell );
  
    reports:
        "Vault Storage Type: '$(_status[storage_type])'";
        "Tail -n 2 ~/.profile"
           printfile => tail_n( "$(with)/.profile", 2 ),
           with => getenv( "HOME", inf );
  
        "head -n 2 ~/.profile"
           printfile => head_n( "/tmp/vault.token.cfsecret", 2 );
  }
#+end_src

#+RESULTS:
: R: Vault Storage Type: 'inmem'
: R: Tail -n 2 ~/.profile
: R: export EDITOR=vim
: R: #export VAULT_TOKEN='s.bzDmuSuSYHPpJd75QTiVWBfD'
: R: head -n 2 ~/.profile
: R: Version: 1.0
: R: Encrypted-for: SHA=6565a8e647e61e4a7ff2c709e0fe772acce2e45aaa294b2bb713de0ba5a6d8c3
: Variable name                            Variable value                                               Meta tags                                Comment                                 
: default:main._status                     {"active_time":"0001-01-01T00:00:00Z","cluster_id":"3a0dc6ae-0d71-daea-d2d9-8dec8da0aff2","cluster_name":"vault-cluster-20f5fd72","ha_enabled":false,"initialized":true,"migration":false,"n":1,"nonce":"","progress":0,"recovery_seal":false,"sealed":false,"storage_type":"inmem","t":1,"type":"shamir","version":"1.9.0"} source=promise                                                                   

*References:*
- [[id:38277465-771a-4db4-983a-8dfd434b1aff][CFEngine Examples]]
